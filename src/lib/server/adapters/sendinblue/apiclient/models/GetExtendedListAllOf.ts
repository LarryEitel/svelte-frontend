// @ts-nocheck
/* tslint:disable */
/* eslint-disable */
/**
 * SendinBlue API
 * SendinBlue provide a RESTFul API that can be used with any languages. With this API, you will be able to :   - Manage your campaigns and get the statistics   - Manage your contacts   - Send transactional Emails and SMS   - and much more...  You can download our wrappers at https://github.com/orgs/sendinblue  **Possible responses**   | Code | Message |   | :-------------: | ------------- |   | 200  | OK. Successful Request  |   | 201  | OK. Successful Creation |   | 202  | OK. Request accepted |   | 204  | OK. Successful Update/Deletion  |   | 400  | Error. Bad Request  |   | 401  | Error. Authentication Needed  |   | 402  | Error. Not enough credit, plan upgrade needed  |   | 403  | Error. Permission denied  |   | 404  | Error. Object does not exist |   | 405  | Error. Method not allowed  |   | 406  | Error. Not Acceptable  |
 *
 * The version of the OpenAPI document: 3.0.0
 * Contact: contact@sendinblue.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { GetExtendedListAllOfCampaignStats } from './GetExtendedListAllOfCampaignStats';
import {
	GetExtendedListAllOfCampaignStatsFromJSON,
	GetExtendedListAllOfCampaignStatsFromJSONTyped,
	GetExtendedListAllOfCampaignStatsToJSON
} from './GetExtendedListAllOfCampaignStats';

/**
 *
 * @export
 * @interface GetExtendedListAllOf
 */
export interface GetExtendedListAllOf {
	/**
	 * ID of the folder
	 * @type {number}
	 * @memberof GetExtendedListAllOf
	 */
	folderId: number;
	/**
	 * Creation UTC date-time of the list (YYYY-MM-DDTHH:mm:ss.SSSZ)
	 * @type {Date}
	 * @memberof GetExtendedListAllOf
	 */
	createdAt: Date;
	/**
	 *
	 * @type {Array<GetExtendedListAllOfCampaignStats>}
	 * @memberof GetExtendedListAllOf
	 */
	campaignStats?: Array<GetExtendedListAllOfCampaignStats>;
	/**
	 * Status telling if the list is dynamic or not (true=dynamic, false=not dynamic)
	 * @type {boolean}
	 * @memberof GetExtendedListAllOf
	 */
	dynamicList?: boolean;
}

/**
 * Check if a given object implements the GetExtendedListAllOf interface.
 */
export function instanceOfGetExtendedListAllOf(value: object): boolean {
	let isInstance = true;
	isInstance = isInstance && 'folderId' in value;
	isInstance = isInstance && 'createdAt' in value;

	return isInstance;
}

export function GetExtendedListAllOfFromJSON(json: any): GetExtendedListAllOf {
	return GetExtendedListAllOfFromJSONTyped(json, false);
}

export function GetExtendedListAllOfFromJSONTyped(
	json: any,
	ignoreDiscriminator: boolean
): GetExtendedListAllOf {
	if (json === undefined || json === null) {
		return json;
	}
	return {
		folderId: json['folderId'],
		createdAt: new Date(json['createdAt']),
		campaignStats: !exists(json, 'campaignStats')
			? undefined
			: (json['campaignStats'] as Array<any>).map(GetExtendedListAllOfCampaignStatsFromJSON),
		dynamicList: !exists(json, 'dynamicList') ? undefined : json['dynamicList']
	};
}

export function GetExtendedListAllOfToJSON(value?: GetExtendedListAllOf | null): any {
	if (value === undefined) {
		return undefined;
	}
	if (value === null) {
		return null;
	}
	return {
		folderId: value.folderId,
		createdAt: value.createdAt.toISOString(),
		campaignStats:
			value.campaignStats === undefined
				? undefined
				: (value.campaignStats as Array<any>).map(GetExtendedListAllOfCampaignStatsToJSON),
		dynamicList: value.dynamicList
	};
}
